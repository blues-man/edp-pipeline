node('maven')  {
 stage 'Build in Dev Project'
 openshiftBuild(namespace: 'cicddev', buildConfig: 'nodetest', showBuildLogs: 'true')
  stage 'Deploy in Dev Project'
 openshiftDeploy(namespace: 'cicddev', deploymentConfig: 'nodetest')
   stage 'Code Analysis Test (example)'
 git branch: 'master', url: 'http://github.com/utherp0/os-rest-containerview'
 sh 'mvn clean install'
 sh "mvn sonar:sonar -Dsonar.host.url=http://sonarqube-sharedservices1.10.33.11.67.xip.io -Dsonar.login=bbb5bf3b9606eca886275f854d0d43d6801b5fa5"
  stage 'Manual Check/Scale in Dev Project.'
 def userInput1 = input( id: 'userInput', message: 'OK to scale in Dev Project?', parameters: [ [$class: 'TextParameterDefinition', defaultValue: 'Add Message Here', description: 'comments', name: 'comments'] ]) 
    openshiftScale(namespace: 'cicddev', deploymentConfig: 'nodetest',replicaCount: '4')
  stage 'Deploy to Production Project'
 openshiftTag(namespace: 'cicddev', sourceStream: 'nodetest',  sourceTag: 'latest', destinationStream: 'nodetest', destinationTag: 'deployToProd')
 openshiftDeploy(namespace: 'cicdprod', deploymentConfig: 'nodetest', )
  stage 'Manual Check/Scale in Prod Project.'
 def userInput2 = input( id: 'userInput', message: 'OK to scale in Prod Project?', parameters: [ [$class: 'TextParameterDefinition', defaultValue: 'Additional Comments?', description: 'comments', name: 'comments'] ]) 
    openshiftScale(namespace: 'cicdprod', deploymentConfig: 'nodetest',replicaCount: '6')
  }
